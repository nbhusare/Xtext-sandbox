/*
 * A closures is an anonymous function which can access variables from 
 * the outer lexical scope.
 */

val x = 'Hello '
val f = [ String e | x + e ]

f.apply('World!')
// Hello World! (String)


/*
 * The square brackets are optional if a closure is passed as the 
 * single parameter to a method. Also the parameter types are optional 
 * if they can be inferred from the context.
 */

val list = newArrayList('a', 'b', 'c')

list.map( e | e.toUpperCase )
// [A, B, C] (List<String>)


/*
 * The type signature of a closure is written like this 
 *   (ParamType) => ReturnType
 */
val (String)=>String f2 = [ e | e.toUpperCase ]

f2.apply('simsalabim')
// SIMSALABIM (String)



