/*
* generated by Xtext
*/
grammar InternalEntityDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.neclipse.xtext.entitydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.neclipse.xtext.entitydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.neclipse.xtext.entitydsl.services.EntityDslGrammarAccess;

}

@parser::members {
 
 	private EntityDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EntityDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleNamespaceDefinition
entryRuleNamespaceDefinition 
:
{ before(grammarAccess.getNamespaceDefinitionRule()); }
	 ruleNamespaceDefinition
{ after(grammarAccess.getNamespaceDefinitionRule()); } 
	 EOF 
;

// Rule NamespaceDefinition
ruleNamespaceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getGroup()); }
(rule__NamespaceDefinition__Group__0)
{ after(grammarAccess.getNamespaceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
(rule__DataType__Alternatives)
{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityReference
entryRuleEntityReference 
:
{ before(grammarAccess.getEntityReferenceRule()); }
	 ruleEntityReference
{ after(grammarAccess.getEntityReferenceRule()); } 
	 EOF 
;

// Rule EntityReference
ruleEntityReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityReferenceAccess().getGroup()); }
(rule__EntityReference__Group__0)
{ after(grammarAccess.getEntityReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringType
entryRuleStringType 
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTypeAccess().getGroup()); }
(rule__StringType__Group__0)
{ after(grammarAccess.getStringTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifedName
entryRuleQualifedName 
:
{ before(grammarAccess.getQualifedNameRule()); }
	 ruleQualifedName
{ after(grammarAccess.getQualifedNameRule()); } 
	 EOF 
;

// Rule QualifedName
ruleQualifedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifedNameAccess().getGroup()); }
(rule__QualifedName__Group__0)
{ after(grammarAccess.getQualifedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifedNameWithWildcard
entryRuleQualifedNameWithWildcard 
:
{ before(grammarAccess.getQualifedNameWithWildcardRule()); }
	 ruleQualifedNameWithWildcard
{ after(grammarAccess.getQualifedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifedNameWithWildcard
ruleQualifedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifedNameWithWildcardAccess().getGroup()); }
(rule__QualifedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getStringTypeParserRuleCall_0()); }
	ruleStringType
{ after(grammarAccess.getDataTypeAccess().getStringTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeAccess().getEntityReferenceParserRuleCall_1()); }
	ruleEntityReference
{ after(grammarAccess.getDataTypeAccess().getEntityReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__NamespaceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDefinition__Group__0__Impl
	rule__NamespaceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getNamespaceDeclarationAssignment_0()); }
(rule__NamespaceDefinition__NamespaceDeclarationAssignment_0)
{ after(grammarAccess.getNamespaceDefinitionAccess().getNamespaceDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDefinition__Group__1__Impl
	rule__NamespaceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getImportDeclarationAssignment_1()); }
(rule__NamespaceDefinition__ImportDeclarationAssignment_1)
{ after(grammarAccess.getNamespaceDefinitionAccess().getImportDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getArtifactAssignment_2()); }
(rule__NamespaceDefinition__ArtifactAssignment_2)
{ after(grammarAccess.getNamespaceDefinitionAccess().getArtifactAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityAction_0()); }
(

)
{ after(grammarAccess.getEntityAccess().getEntityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'Entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAssignment_4()); }
(rule__Entity__AttributesAssignment_4)*
{ after(grammarAccess.getEntityAccess().getAttributesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
(rule__Attribute__NameAssignment_0)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
(rule__Attribute__TypeAssignment_2)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EntityReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityReference__Group__0__Impl
	rule__EntityReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityReferenceAccess().getEntityReferenceAction_0()); }
(

)
{ after(grammarAccess.getEntityReferenceAccess().getEntityReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityReferenceAccess().getEntityAssignment_1()); }
(rule__EntityReference__EntityAssignment_1)
{ after(grammarAccess.getEntityReferenceAccess().getEntityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group__0__Impl
	rule__StringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
(

)
{ after(grammarAccess.getStringTypeAccess().getStringTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group__1__Impl
	rule__StringType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getNameAssignment_1()); }
(rule__StringType__NameAssignment_1)
{ after(grammarAccess.getStringTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getGroup_2()); }
(rule__StringType__Group_2__0)?
{ after(grammarAccess.getStringTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__0__Impl
	rule__StringType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getStringTypeAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__1__Impl
	rule__StringType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getLengthKeyword_2_1()); }

	'length' 

{ after(grammarAccess.getStringTypeAccess().getLengthKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__2__Impl
	rule__StringType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getEqualsSignKeyword_2_2()); }

	'=' 

{ after(grammarAccess.getStringTypeAccess().getEqualsSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__3__Impl
	rule__StringType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getLengthAssignment_2_3()); }
(rule__StringType__LengthAssignment_2_3)
{ after(grammarAccess.getStringTypeAccess().getLengthAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__4__Impl
	rule__StringType__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getGroup_2_4()); }
(rule__StringType__Group_2_4__0)?
{ after(grammarAccess.getStringTypeAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getRightParenthesisKeyword_2_5()); }

	')' 

{ after(grammarAccess.getStringTypeAccess().getRightParenthesisKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StringType__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2_4__0__Impl
	rule__StringType__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getCommaKeyword_2_4_0()); }

	',' 

{ after(grammarAccess.getStringTypeAccess().getCommaKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2_4__1__Impl
	rule__StringType__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getDefaultValueKeyword_2_4_1()); }

	'default-value' 

{ after(grammarAccess.getStringTypeAccess().getDefaultValueKeyword_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2_4__2__Impl
	rule__StringType__Group_2_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getEqualsSignKeyword_2_4_2()); }

	'=' 

{ after(grammarAccess.getStringTypeAccess().getEqualsSignKeyword_2_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringType__Group_2_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringType__Group_2_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Group_2_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getDefaultValueAssignment_2_4_3()); }
(rule__StringType__DefaultValueAssignment_2_4_3)
{ after(grammarAccess.getStringTypeAccess().getDefaultValueAssignment_2_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
(rule__NamespaceDeclaration__NameAssignment_1)
{ after(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportDeclarationAction_0()); }
(

)
{ after(grammarAccess.getImportDeclarationAccess().getImportDeclarationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportsAssignment_1()); }
(rule__ImportDeclaration__ImportsAssignment_1)*
{ after(grammarAccess.getImportDeclarationAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group__0__Impl
	rule__QualifedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getGroup_1()); }
(rule__QualifedName__Group_1__0)*
{ after(grammarAccess.getQualifedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group_1__0__Impl
	rule__QualifedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedNameWithWildcard__Group__0__Impl
	rule__QualifedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameWithWildcardAccess().getQualifedNameParserRuleCall_0()); }
	ruleQualifedName
{ after(grammarAccess.getQualifedNameWithWildcardAccess().getQualifedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__NamespaceDefinition__NamespaceDeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getNamespaceDeclarationNamespaceDeclarationParserRuleCall_0_0()); }
	ruleNamespaceDeclaration{ after(grammarAccess.getNamespaceDefinitionAccess().getNamespaceDeclarationNamespaceDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__ImportDeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getImportDeclarationImportDeclarationParserRuleCall_1_0()); }
	ruleImportDeclaration{ after(grammarAccess.getNamespaceDefinitionAccess().getImportDeclarationImportDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__ArtifactAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getArtifactEntityParserRuleCall_2_0()); }
	ruleEntity{ after(grammarAccess.getNamespaceDefinitionAccess().getArtifactEntityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_4_0()); }
	ruleAttribute{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeDataTypeParserRuleCall_2_0()); }
	ruleDataType{ after(grammarAccess.getAttributeAccess().getTypeDataTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityReference__EntityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEntityReferenceAccess().getEntityEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getNameStringKeyword_1_0()); }
(
{ before(grammarAccess.getStringTypeAccess().getNameStringKeyword_1_0()); }

	'string' 

{ after(grammarAccess.getStringTypeAccess().getNameStringKeyword_1_0()); }
)

{ after(grammarAccess.getStringTypeAccess().getNameStringKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__LengthAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getLengthINTTerminalRuleCall_2_3_0()); }
	RULE_INT{ after(grammarAccess.getStringTypeAccess().getLengthINTTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__DefaultValueAssignment_2_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_4_3_0()); }
	RULE_STRING{ after(grammarAccess.getStringTypeAccess().getDefaultValueSTRINGTerminalRuleCall_2_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameQualifedNameParserRuleCall_1_0()); }
	ruleQualifedName{ after(grammarAccess.getNamespaceDeclarationAccess().getNameQualifedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getImportDeclarationAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


