/*
 * generated by Xtext
 */
package org.neclipse.xtext.functiondsl.scoping;

import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.neclipse.xtext.entitydsl.entityDsl.Attribute;
import org.neclipse.xtext.entitydsl.entityDsl.DataType;
import org.neclipse.xtext.entitydsl.entityDsl.Entity;
import org.neclipse.xtext.entitydsl.entityDsl.EntityReference;
import org.neclipse.xtext.functiondsl.functionDsl.EntityAttribute;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping on how and when
 * to use it
 * 
 */
public class FunctionDslScopeProvider extends
		org.neclipse.xtext.parentdsl.scoping.ParentDslScopeProvider {

	public final IScope scope_EntityAttribute_attribute(
			EntityAttribute entityAttribute, EReference eReference) {
		final EntityAttribute current = entityAttribute.getRef();

		if (current != null) {
			final Attribute attribute = current.getAttribute();
			if (attribute == null) {
				Entity dataType01 = current.getEntityReference().getDataType();
				if (dataType01 instanceof Entity) {
					final Entity entity = (Entity) dataType01;
					return Scopes.scopeFor(entity.getAttributes());
				}
			} else { 
				final DataType dataType02 = attribute.getType();
				if (dataType02 instanceof EntityReference) {
					final EntityReference entityReference = (EntityReference) dataType02;
					return Scopes.scopeFor(entityReference.getEntity()
							.getAttributes());
				}
			}
		}

		return IScope.NULLSCOPE;
	}

}
